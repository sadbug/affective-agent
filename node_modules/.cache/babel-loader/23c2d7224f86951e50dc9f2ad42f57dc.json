{"ast":null,"code":"import React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\ncytoscape.use(edgehandles);\nlet cy = cytoscape({\n  container: document.getElementById('#cy')\n  /* ... */\n\n});\n\nconst GenerateScormPage = () => {\n  let cy = cytoscape({\n    container: document.getElementById('#cy')\n    /* ... */\n\n  }); // the default values of each option are outlined below:\n\n  let defaults = {\n    canConnect: function (sourceNode, targetNode) {\n      // whether an edge can be created between source and target\n      return !sourceNode.same(targetNode); // e.g. disallow loops\n    },\n    edgeParams: function (sourceNode, targetNode) {\n      // for edges between the specified source and target\n      // return element object to be passed to cy.add() for edge\n      return {};\n    },\n    hoverDelay: 150,\n    // time spent hovering over a target node before it is considered selected\n    snap: true,\n    // when enabled, the edge can be drawn by just moving close to a target node (can be confusing on compound graphs)\n    snapThreshold: 50,\n    // the target node must be less than or equal to this many pixels away from the cursor/finger\n    snapFrequency: 15,\n    // the number of times per second (Hz) that snap checks done (lower is less expensive)\n    noEdgeEventsInDraw: true,\n    // set events:no to edges during draws, prevents mouseouts on compounds\n    disableBrowserGestures: true // during an edge drawing gesture, disable browser gestures such as two-finger trackpad swipe and pinch-to-zoom\n\n  };\n  let eh = cy.edgehandles(defaults);\n};\n\n_c = GenerateScormPage;\nexport default GenerateScormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScormPage\");","map":{"version":3,"names":["React","useState","cytoscape","edgehandles","use","cy","container","document","getElementById","GenerateScormPage","defaults","canConnect","sourceNode","targetNode","same","edgeParams","hoverDelay","snap","snapThreshold","snapFrequency","noEdgeEventsInDraw","disableBrowserGestures","eh"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/src/pages/generateScormPage.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\n\ncytoscape.use( edgehandles );\n\nlet cy = cytoscape({\n    container: document.getElementById('#cy'),\n      /* ... */\n  });\n\nconst GenerateScormPage = () => {\n    \n    let cy = cytoscape({\n        container: document.getElementById('#cy'),\n          /* ... */\n      });\n      \n      // the default values of each option are outlined below:\n      let defaults = {\n        canConnect: function( sourceNode, targetNode ){\n          // whether an edge can be created between source and target\n          return !sourceNode.same(targetNode); // e.g. disallow loops\n        },\n        edgeParams: function( sourceNode, targetNode ){\n          // for edges between the specified source and target\n          // return element object to be passed to cy.add() for edge\n          return {};\n        },\n        hoverDelay: 150, // time spent hovering over a target node before it is considered selected\n        snap: true, // when enabled, the edge can be drawn by just moving close to a target node (can be confusing on compound graphs)\n        snapThreshold: 50, // the target node must be less than or equal to this many pixels away from the cursor/finger\n        snapFrequency: 15, // the number of times per second (Hz) that snap checks done (lower is less expensive)\n        noEdgeEventsInDraw: true, // set events:no to edges during draws, prevents mouseouts on compounds\n        disableBrowserGestures: true // during an edge drawing gesture, disable browser gestures such as two-finger trackpad swipe and pinch-to-zoom\n      };\n      \n      let eh = cy.edgehandles( defaults );\n}\n\nexport default GenerateScormPage;"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEAD,SAAS,CAACE,GAAV,CAAeD,WAAf;AAEA,IAAIE,EAAE,GAAGH,SAAS,CAAC;EACfI,SAAS,EAAEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB;EACT;;AAFa,CAAD,CAAlB;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;EAE5B,IAAIJ,EAAE,GAAGH,SAAS,CAAC;IACfI,SAAS,EAAEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB;IACT;;EAFa,CAAD,CAAlB,CAF4B,CAO1B;;EACA,IAAIE,QAAQ,GAAG;IACbC,UAAU,EAAE,UAAUC,UAAV,EAAsBC,UAAtB,EAAkC;MAC5C;MACA,OAAO,CAACD,UAAU,CAACE,IAAX,CAAgBD,UAAhB,CAAR,CAF4C,CAEP;IACtC,CAJY;IAKbE,UAAU,EAAE,UAAUH,UAAV,EAAsBC,UAAtB,EAAkC;MAC5C;MACA;MACA,OAAO,EAAP;IACD,CATY;IAUbG,UAAU,EAAE,GAVC;IAUI;IACjBC,IAAI,EAAE,IAXO;IAWD;IACZC,aAAa,EAAE,EAZF;IAYM;IACnBC,aAAa,EAAE,EAbF;IAaM;IACnBC,kBAAkB,EAAE,IAdP;IAca;IAC1BC,sBAAsB,EAAE,IAfX,CAegB;;EAfhB,CAAf;EAkBA,IAAIC,EAAE,GAAGjB,EAAE,CAACF,WAAH,CAAgBO,QAAhB,CAAT;AACL,CA3BD;;KAAMD,iB;AA6BN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}