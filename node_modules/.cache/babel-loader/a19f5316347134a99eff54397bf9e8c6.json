{"ast":null,"code":"var _jsxFileName = \"/Users/andrejsmolencev/Desktop/scorm-generator/src/pages/generateScormPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateScormPage = () => {\n  _s();\n\n  let cy = cytoscape({\n    container: document.getElementById('cy'),\n    // container to render in\n    elements: [],\n    style: [{\n      selector: 'node',\n      style: {\n        'background-color': '#69e',\n        'label': 'data(id)'\n      }\n    }, {\n      selector: 'edge',\n      style: {\n        'width': 1,\n        'line-color': '#369',\n        'target-arrow-color': '#369',\n        'target-arrow-shape': 'triangle',\n        'label': 'data(label)',\n        'font-size': '14px',\n        'color': '#777'\n      }\n    }],\n    style: cytoscape.stylesheet().selector('edge').css({\n      'width': 3,\n      'line-color': '#369',\n      'target-arrow-color': '#369',\n      'target-arrow-shape': 'triangle',\n      'label': 'data(label)',\n      'font-size': '14px',\n      'color': '#777'\n    }).selector('node').css({\n      'content': 'data(id)',\n      'text-valign': 'center',\n      'color': 'white',\n      'text-outline-width': 2,\n      'text-outline-color': '#888',\n      'background-color': '#888'\n    }).selector(':selected').css({\n      'background-color': 'black',\n      'line-color': 'black',\n      'target-arrow-color': 'black',\n      'source-arrow-color': 'black',\n      'text-outline-color': 'black'\n    }),\n    layout: {\n      name: 'grid',\n      rows: 1\n    }\n  });\n  cy.add([{\n    group: 'nodes',\n    data: {\n      id: '1',\n      name: 'n11'\n    },\n    position: {\n      x: 50,\n      y: 200\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: '2'\n    },\n    position: {\n      x: 131,\n      y: 226\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: '3'\n    },\n    position: {\n      x: 128,\n      y: 143\n    }\n  } //{ group: 'edges',data: { id: 'e0', source: 'Грусть', target: 'Радость', label: 7 } },\n  ]);\n  cy.on('click', 'node', function (evt) {\n    var node = evt.target;\n    console.clear();\n    console.log(node.position());\n  });\n  const [questionList, setQuestionList] = useState([{\n    question: '',\n    answers: [{\n      answer: '',\n      isValid: false\n    }]\n  }]);\n\n  const addNewQuestion = () => {\n    questionList.push({\n      question: '',\n      answers: [{\n        answer: '',\n        isValid: false\n      }]\n    });\n    setQuestionList(questionList);\n  };\n\n  const generateScorm = e => {\n    e.preventDefault();\n    debugger;\n    console.log(JSON.stringify(questionList));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"w-100\",\n      children: \"Generate SCORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u043E\\u043B-\\u0432\\u043E \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432: \", questionList.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GenerateScormPage, \"Yo2hKXgp3gtGIZF+riAlRx3wOqU=\");\n\n_c = GenerateScormPage;\nexport default GenerateScormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScormPage\");","map":{"version":3,"names":["React","useState","cytoscape","edgehandles","GenerateScormPage","cy","container","document","getElementById","elements","style","selector","stylesheet","css","layout","name","rows","add","group","data","id","position","x","y","on","evt","node","target","console","clear","log","questionList","setQuestionList","question","answers","answer","isValid","addNewQuestion","push","generateScorm","e","preventDefault","JSON","stringify","length"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/src/pages/generateScormPage.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\n\n\nconst GenerateScormPage = () => {\n    let cy = cytoscape({\n\n        container: document.getElementById('cy'), // container to render in\n\n        elements: [ ],\n\n        style: [ \n        {\n        selector: 'node',\n        style: {\n            'background-color': '#69e',\n            'label': 'data(id)',\n            }\n        },\n        {\n        selector: 'edge',\n        style: {\n            'width': 1,\n            'line-color': '#369',\n            'target-arrow-color': '#369',\n            'target-arrow-shape': 'triangle',\n            'label': 'data(label)',\n            'font-size': '14px',\n            'color': '#777'\n                }\n        }\n        ],\n        style: cytoscape.stylesheet()\n        .selector('edge')\n        .css({\n        'width': 3,\n        'line-color': '#369',\n        'target-arrow-color': '#369',\n        'target-arrow-shape': 'triangle',\n        'label': 'data(label)',\n        'font-size': '14px',\n        'color': '#777'\n        })\n        .selector('node')\n        .css({\n        'content': 'data(id)',\n        'text-valign': 'center',\n        'color': 'white',\n        'text-outline-width': 2,\n        'text-outline-color': '#888',\n        'background-color': '#888'\n        })\n        .selector(':selected')\n        .css({\n        'background-color': 'black',\n        'line-color': 'black',\n        'target-arrow-color': 'black',\n        'source-arrow-color': 'black',\n        'text-outline-color': 'black'\n        }),\n\n        layout: {\n            name: 'grid',\n            rows: 1\n        }\n        });\n\n        cy.add([\n            { group: 'nodes',data: { id: '1', name:'n11' }, position: { x: 50, y: 200 } },\n            { group: 'nodes',data: { id: '2' }, position: { x: 131, y: 226 } },\n            { group: 'nodes',data: { id: '3' }, position: { x: 128, y: 143 } },\n        //{ group: 'edges',data: { id: 'e0', source: 'Грусть', target: 'Радость', label: 7 } },\n        ]);\n        cy.on('click', 'node', function(evt){\n        var node = evt.target; \n        console.clear()\n        console.log( node.position() );\n        });\n    const [questionList, setQuestionList] = useState([{ question: '', answers: [{ answer: '', isValid: false }] }]);\n\n    const addNewQuestion = () => {\n        questionList.push({ question: '', answers: [{ answer: '', isValid: false }] });\n        setQuestionList(questionList);\n    }\n\n    const generateScorm = (e) => {\n        e.preventDefault();\n        debugger;\n        console.log(JSON.stringify(questionList));\n    }\n\n    return <div className=\"d-flex flex-column\">\n        \n        <p className=\"w-100\">\n            Generate SCORM\n        </p>\n        <p>\n            Кол-во вопросов: {questionList.length}\n        </p>\n        \n        \n        <div id=\"cy\">       \n        </div>\n        \n    </div>\n}\n\nexport default GenerateScormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}