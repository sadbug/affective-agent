{"ast":null,"code":"/**\n * Archiver Vending\n *\n * @ignore\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\n */\nvar Archiver = require('./lib/core');\n\nvar formats = {};\n/**\n * Dispenses a new Archiver instance.\n *\n * @constructor\n * @param  {String} format The archive format to use.\n * @param  {Object} options See [Archiver]{@link Archiver}\n * @return {Archiver}\n */\n\nvar vending = function vending(format, options) {\n  return vending.create(format, options);\n};\n/**\n * Creates a new Archiver instance.\n *\n * @param  {String} format The archive format to use.\n * @param  {Object} options See [Archiver]{@link Archiver}\n * @return {Archiver}\n */\n\n\nvending.create = function (format, options) {\n  if (formats[format]) {\n    var instance = new Archiver(format, options);\n    instance.setFormat(format);\n    instance.setModule(new formats[format](options));\n    return instance;\n  } else {\n    throw new Error('create(' + format + '): format not registered');\n  }\n};\n/**\n * Registers a format for use with archiver.\n *\n * @param  {String} format The name of the format.\n * @param  {Function} module The function for archiver to interact with.\n * @return void\n */\n\n\nvending.registerFormat = function (format, module) {\n  if (formats[format]) {\n    throw new Error('register(' + format + '): format already registered');\n  }\n\n  if (typeof module !== 'function') {\n    throw new Error('register(' + format + '): format module invalid');\n  }\n\n  if (typeof module.prototype.append !== 'function' || typeof module.prototype.finalize !== 'function') {\n    throw new Error('register(' + format + '): format module missing methods');\n  }\n\n  formats[format] = module;\n};\n/**\n * Check if the format is already registered.\n * \n * @param {String} format the name of the format.\n * @return boolean\n */\n\n\nvending.isRegisteredFormat = function (format) {\n  if (formats[format]) {\n    return true;\n  }\n\n  return false;\n};\n\nvending.registerFormat('zip', require('./lib/plugins/zip'));\nvending.registerFormat('tar', require('./lib/plugins/tar'));\nvending.registerFormat('json', require('./lib/plugins/json'));\nmodule.exports = vending;","map":{"version":3,"names":["Archiver","require","formats","vending","format","options","create","instance","setFormat","setModule","Error","registerFormat","module","prototype","append","finalize","isRegisteredFormat","exports"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/node_modules/archiver/index.js"],"sourcesContent":["/**\n * Archiver Vending\n *\n * @ignore\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\n */\nvar Archiver = require('./lib/core');\n\nvar formats = {};\n\n/**\n * Dispenses a new Archiver instance.\n *\n * @constructor\n * @param  {String} format The archive format to use.\n * @param  {Object} options See [Archiver]{@link Archiver}\n * @return {Archiver}\n */\nvar vending = function(format, options) {\n  return vending.create(format, options);\n};\n\n/**\n * Creates a new Archiver instance.\n *\n * @param  {String} format The archive format to use.\n * @param  {Object} options See [Archiver]{@link Archiver}\n * @return {Archiver}\n */\nvending.create = function(format, options) {\n  if (formats[format]) {\n    var instance = new Archiver(format, options);\n    instance.setFormat(format);\n    instance.setModule(new formats[format](options));\n\n    return instance;\n  } else {\n    throw new Error('create(' + format + '): format not registered');\n  }\n};\n\n/**\n * Registers a format for use with archiver.\n *\n * @param  {String} format The name of the format.\n * @param  {Function} module The function for archiver to interact with.\n * @return void\n */\nvending.registerFormat = function(format, module) {\n  if (formats[format]) {\n    throw new Error('register(' + format + '): format already registered');\n  }\n\n  if (typeof module !== 'function') {\n    throw new Error('register(' + format + '): format module invalid');\n  }\n\n  if (typeof module.prototype.append !== 'function' || typeof module.prototype.finalize !== 'function') {\n    throw new Error('register(' + format + '): format module missing methods');\n  }\n\n  formats[format] = module;\n};\n\n/**\n * Check if the format is already registered.\n * \n * @param {String} format the name of the format.\n * @return boolean\n */\nvending.isRegisteredFormat = function (format) {\n  if (formats[format]) {\n    return true;\n  }\n  \n  return false;\n};\n\nvending.registerFormat('zip', require('./lib/plugins/zip'));\nvending.registerFormat('tar', require('./lib/plugins/tar'));\nvending.registerFormat('json', require('./lib/plugins/json'));\n\nmodule.exports = vending;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIC,OAAO,GAAG,EAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,MAAT,EAAiBC,OAAjB,EAA0B;EACtC,OAAOF,OAAO,CAACG,MAAR,CAAeF,MAAf,EAAuBC,OAAvB,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,OAAO,CAACG,MAAR,GAAiB,UAASF,MAAT,EAAiBC,OAAjB,EAA0B;EACzC,IAAIH,OAAO,CAACE,MAAD,CAAX,EAAqB;IACnB,IAAIG,QAAQ,GAAG,IAAIP,QAAJ,CAAaI,MAAb,EAAqBC,OAArB,CAAf;IACAE,QAAQ,CAACC,SAAT,CAAmBJ,MAAnB;IACAG,QAAQ,CAACE,SAAT,CAAmB,IAAIP,OAAO,CAACE,MAAD,CAAX,CAAoBC,OAApB,CAAnB;IAEA,OAAOE,QAAP;EACD,CAND,MAMO;IACL,MAAM,IAAIG,KAAJ,CAAU,YAAYN,MAAZ,GAAqB,0BAA/B,CAAN;EACD;AACF,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,OAAO,CAACQ,cAAR,GAAyB,UAASP,MAAT,EAAiBQ,MAAjB,EAAyB;EAChD,IAAIV,OAAO,CAACE,MAAD,CAAX,EAAqB;IACnB,MAAM,IAAIM,KAAJ,CAAU,cAAcN,MAAd,GAAuB,8BAAjC,CAAN;EACD;;EAED,IAAI,OAAOQ,MAAP,KAAkB,UAAtB,EAAkC;IAChC,MAAM,IAAIF,KAAJ,CAAU,cAAcN,MAAd,GAAuB,0BAAjC,CAAN;EACD;;EAED,IAAI,OAAOQ,MAAM,CAACC,SAAP,CAAiBC,MAAxB,KAAmC,UAAnC,IAAiD,OAAOF,MAAM,CAACC,SAAP,CAAiBE,QAAxB,KAAqC,UAA1F,EAAsG;IACpG,MAAM,IAAIL,KAAJ,CAAU,cAAcN,MAAd,GAAuB,kCAAjC,CAAN;EACD;;EAEDF,OAAO,CAACE,MAAD,CAAP,GAAkBQ,MAAlB;AACD,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;;;AACAT,OAAO,CAACa,kBAAR,GAA6B,UAAUZ,MAAV,EAAkB;EAC7C,IAAIF,OAAO,CAACE,MAAD,CAAX,EAAqB;IACnB,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD,CAND;;AAQAD,OAAO,CAACQ,cAAR,CAAuB,KAAvB,EAA8BV,OAAO,CAAC,mBAAD,CAArC;AACAE,OAAO,CAACQ,cAAR,CAAuB,KAAvB,EAA8BV,OAAO,CAAC,mBAAD,CAArC;AACAE,OAAO,CAACQ,cAAR,CAAuB,MAAvB,EAA+BV,OAAO,CAAC,oBAAD,CAAtC;AAEAW,MAAM,CAACK,OAAP,GAAiBd,OAAjB"},"metadata":{},"sourceType":"script"}