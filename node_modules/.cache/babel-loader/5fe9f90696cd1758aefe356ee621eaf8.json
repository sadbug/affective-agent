{"ast":null,"code":"import React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\n\nconst GenerateScormPage = () => {\n  let cy = cytoscape({\n    container: document.getElementById('cy'),\n    // container to render in\n    elements: [// list of graph elements to start with\n      // { group: 'nodes',data: { id: 'n1' }, position: { x: 200, y: 100 } },\n      // { group: 'nodes',data: { id: 'n2' }, position: { x: 100, y: 50 } },\n      // { group: 'edges',data: { id: 'e0', source: 'n1', target: 'n2' } }\n    ],\n    style: [// the stylesheet for the graph\n    {\n      selector: 'node',\n      style: {\n        'background-color': '#69e',\n        'label': 'data(id)'\n      }\n    }, {\n      selector: 'edge',\n      style: {\n        'width': 1,\n        'line-color': '#369',\n        'target-arrow-color': '#369',\n        'target-arrow-shape': 'triangle',\n        'label': 'data(label)',\n        'font-size': '14px',\n        'color': '#777'\n      }\n    }],\n    style: cytoscape.stylesheet().selector('edge').css({\n      'width': 3,\n      'line-color': '#369',\n      'target-arrow-color': '#369',\n      'target-arrow-shape': 'triangle',\n      'label': 'data(label)',\n      'font-size': '14px',\n      'color': '#777'\n    }).selector('node').css({\n      'content': 'data(id)',\n      'text-valign': 'center',\n      'color': 'white',\n      'text-outline-width': 2,\n      'text-outline-color': '#888',\n      'background-color': '#888'\n    }).selector(':selected').css({\n      'background-color': 'black',\n      'line-color': 'black',\n      'target-arrow-color': 'black',\n      'source-arrow-color': 'black',\n      'text-outline-color': 'black'\n    }),\n    layout: {\n      name: 'grid',\n      rows: 1\n    }\n  });\n  cy.add([{\n    group: 'nodes',\n    data: {\n      id: 'n1',\n      name: 'n11'\n    },\n    position: {\n      x: 50,\n      y: 200\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: 'n2'\n    },\n    position: {\n      x: 131,\n      y: 226\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: 'n3'\n    },\n    position: {\n      x: 128,\n      y: 143\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: 'n4'\n    },\n    position: {\n      x: 249,\n      y: 142\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: 'n5'\n    },\n    position: {\n      x: 191,\n      y: 62\n    }\n  }, {\n    group: 'nodes',\n    data: {\n      id: 'n6'\n    },\n    position: {\n      x: 66,\n      y: 83\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e0',\n      source: 'n1',\n      target: 'n2',\n      label: 7\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e1',\n      source: 'n2',\n      target: 'n3',\n      label: 10\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e2',\n      source: 'n1',\n      target: 'n6',\n      label: 14\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e3',\n      source: 'n1',\n      target: 'n3',\n      label: 9\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e4',\n      source: 'n2',\n      target: 'n4',\n      label: 15\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e5',\n      source: 'n3',\n      target: 'n4',\n      label: 11\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e6',\n      source: 'n3',\n      target: 'n6',\n      label: 2\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e7',\n      source: 'n6',\n      target: 'n5',\n      label: 9\n    }\n  }, {\n    group: 'edges',\n    data: {\n      id: 'e8',\n      source: 'n5',\n      target: 'n4',\n      label: 6\n    }\n  }]);\n  cy.on('click', 'node', function (evt) {\n    var node = evt.target;\n    console.clear();\n    console.log(node.position());\n  });\n  var dijkstra = cy.elements().dijkstra('#n1', function (edge) {\n    return edge.data('label');\n  });\n  console.log(dijkstra.pathTo(cy.$('#n5')));\n  console.log(dijkstra.distanceTo(cy.$('#n5')));\n  var p = dijkstra.pathTo(cy.$('#n5')); // for(let i = 0; i < p.length; i++ ){\n  //   console.log(i,p[i]._private.data.id);\n  //   cy.$('#'+p[i]._private.data.id).select();\n  // }\n\n  let i = 0,\n      tick = 1000;\n\n  (function () {\n    if (i < p.length) {\n      cy.$('#' + p[i]._private.data.id).select();\n      i++;\n      setTimeout(arguments.callee, tick);\n    }\n  })(); // for(let i = 0; i < p.length; i++ ){\n  //   console.log(i,p[i]._private.data.id);\n  //   cy.$('#'+p[i]._private.data.id).select();\n  // }\n\n};\n\n_c = GenerateScormPage;\nexport default GenerateScormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateScormPage\");","map":{"version":3,"names":["React","useState","cytoscape","edgehandles","GenerateScormPage","cy","container","document","getElementById","elements","style","selector","stylesheet","css","layout","name","rows","add","group","data","id","position","x","y","source","target","label","on","evt","node","console","clear","log","dijkstra","edge","pathTo","$","distanceTo","p","i","tick","length","_private","select","setTimeout","arguments","callee"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/src/pages/generateScormPage.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\n\n\n\n\nconst GenerateScormPage = () => {\n    let cy = cytoscape({\n\n        container: document.getElementById('cy'), // container to render in\n      \n        elements: [ // list of graph elements to start with\n          // { group: 'nodes',data: { id: 'n1' }, position: { x: 200, y: 100 } },\n          // { group: 'nodes',data: { id: 'n2' }, position: { x: 100, y: 50 } },\n          // { group: 'edges',data: { id: 'e0', source: 'n1', target: 'n2' } }\n        ],\n      \n        style: [ // the stylesheet for the graph\n          {\n            selector: 'node',\n            style: {\n              'background-color': '#69e',\n              'label': 'data(id)',\n            }\n          },\n      \n          {\n            selector: 'edge',\n            style: {\n              'width': 1,\n              'line-color': '#369',\n              'target-arrow-color': '#369',\n              'target-arrow-shape': 'triangle',\n              'label': 'data(label)',\n              'font-size': '14px',\n              'color': '#777'\n            }\n          }\n        ],\n      \n        style: cytoscape.stylesheet()\n        .selector('edge')\n            .css({\n              'width': 3,\n              'line-color': '#369',\n              'target-arrow-color': '#369',\n              'target-arrow-shape': 'triangle',\n              'label': 'data(label)',\n              'font-size': '14px',\n              'color': '#777'\n            })\n          .selector('node')\n            .css({\n              'content': 'data(id)',\n              'text-valign': 'center',\n              'color': 'white',\n              'text-outline-width': 2,\n              'text-outline-color': '#888',\n              'background-color': '#888'\n            })\n          .selector(':selected')\n            .css({\n              'background-color': 'black',\n              'line-color': 'black',\n              'target-arrow-color': 'black',\n              'source-arrow-color': 'black',\n              'text-outline-color': 'black'\n            }),\n      \n        layout: {\n          name: 'grid',\n          rows: 1\n        }\n      \n      });\n          \n      cy.add([\n          { group: 'nodes',data: { id: 'n1', name:'n11' }, position: { x: 50, y: 200 } },\n          { group: 'nodes',data: { id: 'n2' }, position: { x: 131, y: 226 } },\n          { group: 'nodes',data: { id: 'n3' }, position: { x: 128, y: 143 } },\n          { group: 'nodes',data: { id: 'n4' }, position: { x: 249, y: 142 } },\n          { group: 'nodes',data: { id: 'n5' }, position: { x: 191, y: 62 } },\n          { group: 'nodes',data: { id: 'n6' }, position: { x: 66, y: 83 } },\n          { group: 'edges',data: { id: 'e0', source: 'n1', target: 'n2', label: 7 } },\n          { group: 'edges',data: { id: 'e1', source: 'n2', target: 'n3', label: 10 } },\n          { group: 'edges',data: { id: 'e2', source: 'n1', target: 'n6', label: 14 } },\n          { group: 'edges',data: { id: 'e3', source: 'n1', target: 'n3', label: 9 } },\n          { group: 'edges',data: { id: 'e4', source: 'n2', target: 'n4', label: 15 } },\n          { group: 'edges',data: { id: 'e5', source: 'n3', target: 'n4', label: 11 } },\n          { group: 'edges',data: { id: 'e6', source: 'n3', target: 'n6', label: 2 } },\n          { group: 'edges',data: { id: 'e7', source: 'n6', target: 'n5', label: 9 } },  \n          { group: 'edges',data: { id: 'e8', source: 'n5', target: 'n4', label: 6 } },\n      ]);\n      cy.on('click', 'node', function(evt){\n        var node = evt.target; \n        console.clear()\n        console.log( node.position() );\n      });\n      \n      \n      var dijkstra = cy.elements().dijkstra('#n1', function(edge){\n        return edge.data('label');\n      });\n      console.log( dijkstra.pathTo( cy.$('#n5') ));\n      console.log( dijkstra.distanceTo( cy.$('#n5') ));\n      var p = dijkstra.pathTo( cy.$('#n5') );\n      // for(let i = 0; i < p.length; i++ ){\n      //   console.log(i,p[i]._private.data.id);\n      //   cy.$('#'+p[i]._private.data.id).select();\n      // }\n      \n      let i = 0, tick = 1000;\n      \n      (function(){\n        if( i <  p.length){   \n          cy.$('#'+p[i]._private.data.id).select();\n          i++;\n          setTimeout(arguments.callee,tick)\n        }\n      })()\n      // for(let i = 0; i < p.length; i++ ){\n      //   console.log(i,p[i]._private.data.id);\n      //   cy.$('#'+p[i]._private.data.id).select();\n      // }\n}\n\nexport default GenerateScormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}