{"ast":null,"code":"const fs = require(\"./fileSystem\").require();\n\nconst pth = require(\"path\");\n\nfs.existsSync = fs.existsSync || pth.existsSync;\n\nmodule.exports = function (\n/*String*/\npath) {\n  var _path = path || \"\",\n      _obj = newAttr(),\n      _stat = null;\n\n  function newAttr() {\n    return {\n      directory: false,\n      readonly: false,\n      hidden: false,\n      executable: false,\n      mtime: 0,\n      atime: 0\n    };\n  }\n\n  if (_path && fs.existsSync(_path)) {\n    _stat = fs.statSync(_path);\n    _obj.directory = _stat.isDirectory();\n    _obj.mtime = _stat.mtime;\n    _obj.atime = _stat.atime;\n    _obj.executable = (0o111 & _stat.mode) !== 0; // file is executable who ever har right not just owner\n\n    _obj.readonly = (0o200 & _stat.mode) === 0; // readonly if owner has no write right\n\n    _obj.hidden = pth.basename(_path)[0] === \".\";\n  } else {\n    console.warn(\"Invalid path: \" + _path);\n  }\n\n  return {\n    get directory() {\n      return _obj.directory;\n    },\n\n    get readOnly() {\n      return _obj.readonly;\n    },\n\n    get hidden() {\n      return _obj.hidden;\n    },\n\n    get mtime() {\n      return _obj.mtime;\n    },\n\n    get atime() {\n      return _obj.atime;\n    },\n\n    get executable() {\n      return _obj.executable;\n    },\n\n    decodeAttributes: function () {},\n    encodeAttributes: function () {},\n    toJSON: function () {\n      return {\n        path: _path,\n        isDirectory: _obj.directory,\n        isReadOnly: _obj.readonly,\n        isHidden: _obj.hidden,\n        isExecutable: _obj.executable,\n        mTime: _obj.mtime,\n        aTime: _obj.atime\n      };\n    },\n    toString: function () {\n      return JSON.stringify(this.toJSON(), null, \"\\t\");\n    }\n  };\n};","map":{"version":3,"names":["fs","require","pth","existsSync","module","exports","path","_path","_obj","newAttr","_stat","directory","readonly","hidden","executable","mtime","atime","statSync","isDirectory","mode","basename","console","warn","readOnly","decodeAttributes","encodeAttributes","toJSON","isReadOnly","isHidden","isExecutable","mTime","aTime","toString","JSON","stringify"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/node_modules/adm-zip/util/fattr.js"],"sourcesContent":["const fs = require(\"./fileSystem\").require();\nconst pth = require(\"path\");\n\nfs.existsSync = fs.existsSync || pth.existsSync;\n\nmodule.exports = function (/*String*/ path) {\n    var _path = path || \"\",\n        _obj = newAttr(),\n        _stat = null;\n\n    function newAttr() {\n        return {\n            directory: false,\n            readonly: false,\n            hidden: false,\n            executable: false,\n            mtime: 0,\n            atime: 0\n        };\n    }\n\n    if (_path && fs.existsSync(_path)) {\n        _stat = fs.statSync(_path);\n        _obj.directory = _stat.isDirectory();\n        _obj.mtime = _stat.mtime;\n        _obj.atime = _stat.atime;\n        _obj.executable = (0o111 & _stat.mode) !== 0; // file is executable who ever har right not just owner\n        _obj.readonly = (0o200 & _stat.mode) === 0; // readonly if owner has no write right\n        _obj.hidden = pth.basename(_path)[0] === \".\";\n    } else {\n        console.warn(\"Invalid path: \" + _path);\n    }\n\n    return {\n        get directory() {\n            return _obj.directory;\n        },\n\n        get readOnly() {\n            return _obj.readonly;\n        },\n\n        get hidden() {\n            return _obj.hidden;\n        },\n\n        get mtime() {\n            return _obj.mtime;\n        },\n\n        get atime() {\n            return _obj.atime;\n        },\n\n        get executable() {\n            return _obj.executable;\n        },\n\n        decodeAttributes: function () {},\n\n        encodeAttributes: function () {},\n\n        toJSON: function () {\n            return {\n                path: _path,\n                isDirectory: _obj.directory,\n                isReadOnly: _obj.readonly,\n                isHidden: _obj.hidden,\n                isExecutable: _obj.executable,\n                mTime: _obj.mtime,\n                aTime: _obj.atime\n            };\n        },\n\n        toString: function () {\n            return JSON.stringify(this.toJSON(), null, \"\\t\");\n        }\n    };\n};\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBA,OAAxB,EAAX;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AAEAD,EAAE,CAACG,UAAH,GAAgBH,EAAE,CAACG,UAAH,IAAiBD,GAAG,CAACC,UAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAAU;AAAWC,IAArB,EAA2B;EACxC,IAAIC,KAAK,GAAGD,IAAI,IAAI,EAApB;EAAA,IACIE,IAAI,GAAGC,OAAO,EADlB;EAAA,IAEIC,KAAK,GAAG,IAFZ;;EAIA,SAASD,OAAT,GAAmB;IACf,OAAO;MACHE,SAAS,EAAE,KADR;MAEHC,QAAQ,EAAE,KAFP;MAGHC,MAAM,EAAE,KAHL;MAIHC,UAAU,EAAE,KAJT;MAKHC,KAAK,EAAE,CALJ;MAMHC,KAAK,EAAE;IANJ,CAAP;EAQH;;EAED,IAAIT,KAAK,IAAIP,EAAE,CAACG,UAAH,CAAcI,KAAd,CAAb,EAAmC;IAC/BG,KAAK,GAAGV,EAAE,CAACiB,QAAH,CAAYV,KAAZ,CAAR;IACAC,IAAI,CAACG,SAAL,GAAiBD,KAAK,CAACQ,WAAN,EAAjB;IACAV,IAAI,CAACO,KAAL,GAAaL,KAAK,CAACK,KAAnB;IACAP,IAAI,CAACQ,KAAL,GAAaN,KAAK,CAACM,KAAnB;IACAR,IAAI,CAACM,UAAL,GAAkB,CAAC,QAAQJ,KAAK,CAACS,IAAf,MAAyB,CAA3C,CAL+B,CAKe;;IAC9CX,IAAI,CAACI,QAAL,GAAgB,CAAC,QAAQF,KAAK,CAACS,IAAf,MAAyB,CAAzC,CAN+B,CAMa;;IAC5CX,IAAI,CAACK,MAAL,GAAcX,GAAG,CAACkB,QAAJ,CAAab,KAAb,EAAoB,CAApB,MAA2B,GAAzC;EACH,CARD,MAQO;IACHc,OAAO,CAACC,IAAR,CAAa,mBAAmBf,KAAhC;EACH;;EAED,OAAO;IACH,IAAII,SAAJ,GAAgB;MACZ,OAAOH,IAAI,CAACG,SAAZ;IACH,CAHE;;IAKH,IAAIY,QAAJ,GAAe;MACX,OAAOf,IAAI,CAACI,QAAZ;IACH,CAPE;;IASH,IAAIC,MAAJ,GAAa;MACT,OAAOL,IAAI,CAACK,MAAZ;IACH,CAXE;;IAaH,IAAIE,KAAJ,GAAY;MACR,OAAOP,IAAI,CAACO,KAAZ;IACH,CAfE;;IAiBH,IAAIC,KAAJ,GAAY;MACR,OAAOR,IAAI,CAACQ,KAAZ;IACH,CAnBE;;IAqBH,IAAIF,UAAJ,GAAiB;MACb,OAAON,IAAI,CAACM,UAAZ;IACH,CAvBE;;IAyBHU,gBAAgB,EAAE,YAAY,CAAE,CAzB7B;IA2BHC,gBAAgB,EAAE,YAAY,CAAE,CA3B7B;IA6BHC,MAAM,EAAE,YAAY;MAChB,OAAO;QACHpB,IAAI,EAAEC,KADH;QAEHW,WAAW,EAAEV,IAAI,CAACG,SAFf;QAGHgB,UAAU,EAAEnB,IAAI,CAACI,QAHd;QAIHgB,QAAQ,EAAEpB,IAAI,CAACK,MAJZ;QAKHgB,YAAY,EAAErB,IAAI,CAACM,UALhB;QAMHgB,KAAK,EAAEtB,IAAI,CAACO,KANT;QAOHgB,KAAK,EAAEvB,IAAI,CAACQ;MAPT,CAAP;IASH,CAvCE;IAyCHgB,QAAQ,EAAE,YAAY;MAClB,OAAOC,IAAI,CAACC,SAAL,CAAe,KAAKR,MAAL,EAAf,EAA8B,IAA9B,EAAoC,IAApC,CAAP;IACH;EA3CE,CAAP;AA6CH,CAzED"},"metadata":{},"sourceType":"script"}