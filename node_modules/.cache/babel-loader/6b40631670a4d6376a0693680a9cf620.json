{"ast":null,"code":"/**\n * ZIP Format Plugin\n *\n * @module plugins/zip\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\n */\nvar engine = require('zip-stream');\n\nvar util = require('archiver-utils');\n/**\n * @constructor\n * @param {ZipOptions} [options]\n * @param {String} [options.comment] Sets the zip archive comment.\n * @param {Boolean} [options.forceLocalTime=false] Forces the archive to contain local file times instead of UTC.\n * @param {Boolean} [options.forceZip64=false] Forces the archive to contain ZIP64 headers.\n * @param {Boolean} [options.namePrependSlash=false] Prepends a forward slash to archive file paths.\n * @param {Boolean} [options.store=false] Sets the compression method to STORE.\n * @param {Object} [options.zlib] Passed to [zlib]{@link https://nodejs.org/api/zlib.html#zlib_class_options}\n */\n\n\nvar Zip = function Zip(options) {\n  if (!(this instanceof Zip)) {\n    return new Zip(options);\n  }\n\n  options = this.options = util.defaults(options, {\n    comment: '',\n    forceUTC: false,\n    namePrependSlash: false,\n    store: false\n  });\n  this.supports = {\n    directory: true,\n    symlink: true\n  };\n  this.engine = new engine(options);\n};\n/**\n * @param  {(Buffer|Stream)} source\n * @param  {ZipEntryData} data\n * @param  {String} data.name Sets the entry name including internal path.\n * @param  {(String|Date)} [data.date=NOW()] Sets the entry date.\n * @param  {Number} [data.mode=D:0755/F:0644] Sets the entry permissions.\n * @param  {String} [data.prefix] Sets a path prefix for the entry name. Useful\n * when working with methods like `directory` or `glob`.\n * @param  {fs.Stats} [data.stats] Sets the fs stat data for this entry allowing\n * for reduction of fs stat calls when stat data is already known.\n * @param  {Boolean} [data.store=ZipOptions.store] Sets the compression method to STORE.\n * @param  {Function} callback\n * @return void\n */\n\n\nZip.prototype.append = function (source, data, callback) {\n  this.engine.entry(source, data, callback);\n};\n/**\n * @return void\n */\n\n\nZip.prototype.finalize = function () {\n  this.engine.finalize();\n};\n/**\n * @return this.engine\n */\n\n\nZip.prototype.on = function () {\n  return this.engine.on.apply(this.engine, arguments);\n};\n/**\n * @return this.engine\n */\n\n\nZip.prototype.pipe = function () {\n  return this.engine.pipe.apply(this.engine, arguments);\n};\n/**\n * @return this.engine\n */\n\n\nZip.prototype.unpipe = function () {\n  return this.engine.unpipe.apply(this.engine, arguments);\n};\n\nmodule.exports = Zip;\n/**\n * @typedef {Object} ZipOptions\n * @global\n * @property {String} [comment] Sets the zip archive comment.\n * @property {Boolean} [forceLocalTime=false] Forces the archive to contain local file times instead of UTC.\n * @property {Boolean} [forceZip64=false] Forces the archive to contain ZIP64 headers.\n * @prpperty {Boolean} [namePrependSlash=false] Prepends a forward slash to archive file paths.\n * @property {Boolean} [store=false] Sets the compression method to STORE.\n * @property {Object} [zlib] Passed to [zlib]{@link https://nodejs.org/api/zlib.html#zlib_class_options}\n * to control compression.\n * @property {*} [*] See [zip-stream]{@link https://archiverjs.com/zip-stream/ZipStream.html} documentation for current list of properties.\n */\n\n/**\n * @typedef {Object} ZipEntryData\n * @global\n * @property {String} name Sets the entry name including internal path.\n * @property {(String|Date)} [date=NOW()] Sets the entry date.\n * @property {Number} [mode=D:0755/F:0644] Sets the entry permissions.\n * @property {Boolean} [namePrependSlash=ZipOptions.namePrependSlash] Prepends a forward slash to archive file paths.\n * @property {String} [prefix] Sets a path prefix for the entry name. Useful\n * when working with methods like `directory` or `glob`.\n * @property {fs.Stats} [stats] Sets the fs stat data for this entry allowing\n * for reduction of fs stat calls when stat data is already known.\n * @property {Boolean} [store=ZipOptions.store] Sets the compression method to STORE.\n */\n\n/**\n * ZipStream Module\n * @external ZipStream\n * @see {@link https://www.archiverjs.com/zip-stream/ZipStream.html}\n */","map":{"version":3,"names":["engine","require","util","Zip","options","defaults","comment","forceUTC","namePrependSlash","store","supports","directory","symlink","prototype","append","source","data","callback","entry","finalize","on","apply","arguments","pipe","unpipe","module","exports"],"sources":["/Users/andrejsmolencev/Desktop/scorm-generator/node_modules/archiver/lib/plugins/zip.js"],"sourcesContent":["/**\n * ZIP Format Plugin\n *\n * @module plugins/zip\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\n */\nvar engine = require('zip-stream');\nvar util = require('archiver-utils');\n\n/**\n * @constructor\n * @param {ZipOptions} [options]\n * @param {String} [options.comment] Sets the zip archive comment.\n * @param {Boolean} [options.forceLocalTime=false] Forces the archive to contain local file times instead of UTC.\n * @param {Boolean} [options.forceZip64=false] Forces the archive to contain ZIP64 headers.\n * @param {Boolean} [options.namePrependSlash=false] Prepends a forward slash to archive file paths.\n * @param {Boolean} [options.store=false] Sets the compression method to STORE.\n * @param {Object} [options.zlib] Passed to [zlib]{@link https://nodejs.org/api/zlib.html#zlib_class_options}\n */\nvar Zip = function(options) {\n  if (!(this instanceof Zip)) {\n    return new Zip(options);\n  }\n\n  options = this.options = util.defaults(options, {\n    comment: '',\n    forceUTC: false,\n    namePrependSlash: false,\n    store: false\n  });\n\n  this.supports = {\n    directory: true,\n    symlink: true\n  };\n\n  this.engine = new engine(options);\n};\n\n/**\n * @param  {(Buffer|Stream)} source\n * @param  {ZipEntryData} data\n * @param  {String} data.name Sets the entry name including internal path.\n * @param  {(String|Date)} [data.date=NOW()] Sets the entry date.\n * @param  {Number} [data.mode=D:0755/F:0644] Sets the entry permissions.\n * @param  {String} [data.prefix] Sets a path prefix for the entry name. Useful\n * when working with methods like `directory` or `glob`.\n * @param  {fs.Stats} [data.stats] Sets the fs stat data for this entry allowing\n * for reduction of fs stat calls when stat data is already known.\n * @param  {Boolean} [data.store=ZipOptions.store] Sets the compression method to STORE.\n * @param  {Function} callback\n * @return void\n */\nZip.prototype.append = function(source, data, callback) {\n  this.engine.entry(source, data, callback);\n};\n\n/**\n * @return void\n */\nZip.prototype.finalize = function() {\n  this.engine.finalize();\n};\n\n/**\n * @return this.engine\n */\nZip.prototype.on = function() {\n  return this.engine.on.apply(this.engine, arguments);\n};\n\n/**\n * @return this.engine\n */\nZip.prototype.pipe = function() {\n  return this.engine.pipe.apply(this.engine, arguments);\n};\n\n/**\n * @return this.engine\n */\nZip.prototype.unpipe = function() {\n  return this.engine.unpipe.apply(this.engine, arguments);\n};\n\nmodule.exports = Zip;\n\n/**\n * @typedef {Object} ZipOptions\n * @global\n * @property {String} [comment] Sets the zip archive comment.\n * @property {Boolean} [forceLocalTime=false] Forces the archive to contain local file times instead of UTC.\n * @property {Boolean} [forceZip64=false] Forces the archive to contain ZIP64 headers.\n * @prpperty {Boolean} [namePrependSlash=false] Prepends a forward slash to archive file paths.\n * @property {Boolean} [store=false] Sets the compression method to STORE.\n * @property {Object} [zlib] Passed to [zlib]{@link https://nodejs.org/api/zlib.html#zlib_class_options}\n * to control compression.\n * @property {*} [*] See [zip-stream]{@link https://archiverjs.com/zip-stream/ZipStream.html} documentation for current list of properties.\n */\n\n/**\n * @typedef {Object} ZipEntryData\n * @global\n * @property {String} name Sets the entry name including internal path.\n * @property {(String|Date)} [date=NOW()] Sets the entry date.\n * @property {Number} [mode=D:0755/F:0644] Sets the entry permissions.\n * @property {Boolean} [namePrependSlash=ZipOptions.namePrependSlash] Prepends a forward slash to archive file paths.\n * @property {String} [prefix] Sets a path prefix for the entry name. Useful\n * when working with methods like `directory` or `glob`.\n * @property {fs.Stats} [stats] Sets the fs stat data for this entry allowing\n * for reduction of fs stat calls when stat data is already known.\n * @property {Boolean} [store=ZipOptions.store] Sets the compression method to STORE.\n */\n\n/**\n * ZipStream Module\n * @external ZipStream\n * @see {@link https://www.archiverjs.com/zip-stream/ZipStream.html}\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,GAAG,GAAG,SAANA,GAAM,CAASC,OAAT,EAAkB;EAC1B,IAAI,EAAE,gBAAgBD,GAAlB,CAAJ,EAA4B;IAC1B,OAAO,IAAIA,GAAJ,CAAQC,OAAR,CAAP;EACD;;EAEDA,OAAO,GAAG,KAAKA,OAAL,GAAeF,IAAI,CAACG,QAAL,CAAcD,OAAd,EAAuB;IAC9CE,OAAO,EAAE,EADqC;IAE9CC,QAAQ,EAAE,KAFoC;IAG9CC,gBAAgB,EAAE,KAH4B;IAI9CC,KAAK,EAAE;EAJuC,CAAvB,CAAzB;EAOA,KAAKC,QAAL,GAAgB;IACdC,SAAS,EAAE,IADG;IAEdC,OAAO,EAAE;EAFK,CAAhB;EAKA,KAAKZ,MAAL,GAAc,IAAIA,MAAJ,CAAWI,OAAX,CAAd;AACD,CAlBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,GAAG,CAACU,SAAJ,CAAcC,MAAd,GAAuB,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;EACtD,KAAKjB,MAAL,CAAYkB,KAAZ,CAAkBH,MAAlB,EAA0BC,IAA1B,EAAgCC,QAAhC;AACD,CAFD;AAIA;AACA;AACA;;;AACAd,GAAG,CAACU,SAAJ,CAAcM,QAAd,GAAyB,YAAW;EAClC,KAAKnB,MAAL,CAAYmB,QAAZ;AACD,CAFD;AAIA;AACA;AACA;;;AACAhB,GAAG,CAACU,SAAJ,CAAcO,EAAd,GAAmB,YAAW;EAC5B,OAAO,KAAKpB,MAAL,CAAYoB,EAAZ,CAAeC,KAAf,CAAqB,KAAKrB,MAA1B,EAAkCsB,SAAlC,CAAP;AACD,CAFD;AAIA;AACA;AACA;;;AACAnB,GAAG,CAACU,SAAJ,CAAcU,IAAd,GAAqB,YAAW;EAC9B,OAAO,KAAKvB,MAAL,CAAYuB,IAAZ,CAAiBF,KAAjB,CAAuB,KAAKrB,MAA5B,EAAoCsB,SAApC,CAAP;AACD,CAFD;AAIA;AACA;AACA;;;AACAnB,GAAG,CAACU,SAAJ,CAAcW,MAAd,GAAuB,YAAW;EAChC,OAAO,KAAKxB,MAAL,CAAYwB,MAAZ,CAAmBH,KAAnB,CAAyB,KAAKrB,MAA9B,EAAsCsB,SAAtC,CAAP;AACD,CAFD;;AAIAG,MAAM,CAACC,OAAP,GAAiBvB,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}